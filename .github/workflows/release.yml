name: release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          check-latest: true

      - name: Install
        run: npm install

      - name: Get name and version from package.json
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        run: npm run build

      - name: Compress
        run: |
          zip -9 -j ${{ env.PACKAGE_NAME }}-linux-x64.zip ./build/linux-x64/${{ env.PACKAGE_NAME }}
          zip -9 -j ${{ env.PACKAGE_NAME }}-macos-x64.zip ./build/macos-x64/${{ env.PACKAGE_NAME }}
          zip -9 -j ${{ env.PACKAGE_NAME }}-macos-arm64.zip ./build/macos-arm64/${{ env.PACKAGE_NAME }}
          zip -9 -j ${{ env.PACKAGE_NAME }}-win-x64.zip ./build/win-x64/${{ env.PACKAGE_NAME }}.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: 'v${{ env.PACKAGE_VERSION }}'
          generate_release_notes: true
          files: |
            ${{ env.PACKAGE_NAME }}-linux-x64.zip
            ${{ env.PACKAGE_NAME }}-macos-x64.zip
            ${{ env.PACKAGE_NAME }}-macos-arm64.zip
            ${{ env.PACKAGE_NAME }}-win-x64.zip

permissions:
  contents: write
